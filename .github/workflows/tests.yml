name: Tests

on:
  push:
    branches:
      - 'master'
    tags: [ '*' ]
  pull_request:
    branches:
      - 'master'

jobs:
  tests:
    strategy:
      max-parallel: 5
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
        continue-on-error:
          - false
        include:
          - os: ubuntu-latest
            python-version: '3.8'
            coverage: true
            lint: true
            continue-on-error: false
          - os: macOS-latest
            python-version: '3.8'
            continue-on-error: false
          - os: windows-latest
            python-version: '3.8'
            continue-on-error: true
          - os: ubuntu-latest
            python-version: pypy-3.8
            continue-on-error: false
          - os: ubuntu-latest
            python-version: pypy-3.9
            continue-on-error: false

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4.1.7
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.2.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install -U hatch
      - name: ruff
        if: ${{ matrix.lint }}
        run: |
          hatch run lint:ruff check aioworkers tests
      - name: isort
        if: ${{ matrix.lint }}
        run: |
          hatch run lint:isort -c aioworkers tests
      - name: black
        if: ${{ matrix.lint }}
        run: |
          hatch run lint:black --check --diff aioworkers tests
      - name: mypy
        if: ${{ matrix.lint }}
        run: |
          hatch run lint:mypy aioworkers tests
      - name: Tests with coverage
        run: |
          hatch run cov
        continue-on-error: ${{ matrix.continue-on-error }}
      - name: coverage.xml
        if: ${{ matrix.coverage }}
        run: |
          hatch run coverage xml
      - name: Upload coverage to Codecov
        if: ${{ matrix.coverage }}
        uses: codecov/codecov-action@v4.6.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
